Vms5km$Grid = '5km2'
df = rbind(Vms1km, Vms2km, Vms3km, Vms4km, Vms5km)
max_y=max(df$VMSOpTime.min._PredictedOp)
df$Grid = as.factor(df$Grid)
if (model_tested == 'multiclassModel' ){df$Operation = factor(df$Operation, levels=c('F','T','C'))
} else if (model_tested == 'binaryModel' | model_tested == 'speedFilter'){df$Operation = factor(df$Operation, levels=c('F','TC'))}
#VMS observed Vs VMS predicted
ggplot(df, aes(x=VMSOpTime.min._ObservedOp, y=VMSOpTime.min._PredictedOp, color=Operation))+
geom_point()+
facet_grid(rows=vars(Operation), cols=vars(Grid), scales='free')+
theme_bw()+
geom_smooth(method='lm', se=TRUE)+
geom_abline(slope=1, linetype='dashed')+
stat_cor(label.y = max_y-150, color='black')+
stat_regline_equation(label.y = max_y-250, color='black')+
theme(legend.position = 'none')+
xlab('OBSERVED VMS operation time (min/km2)')+
ylab('PREDICTED VMS operation time (min/km2)')+
ggtitle(model_tested)
ggsave(paste0('results/', model_tested,'/fishingEffortCheck/resultsVMSobsVMSpred_kmsq_corrplots.jpeg'), units='px', height = 2000, width = 4000)
#2. Fishing trip operation time. observed vs predicted
meanFtimePoint = 8.6
d= read.csv(paste0('results/', model_tested, '/fishingEffortCheck/vmsOp2_pred.csv'))
d$ObservedOp = as.factor(d$ObservedOp)
d$PredictedOp = as.factor(d$OperationPred)
dobs = d %>% group_by(TrackCode, Operation = ObservedOp) %>% summarize(n=n())  %>% mutate(ObsPred = 'Observed')
dobs$Operation = as.factor(dobs$Operation)
dobs$TrackCode = as.factor(dobs$TrackCode)
dobsEx = expand.grid(TrackCode = levels(dobs$TrackCode), Operation = levels(dobs$Operation)) #to get values for all operations and fishing trips (trackCode)
dobsEx = left_join(dobsEx, dobs, by=c('TrackCode', 'Operation')) %>% arrange(TrackCode)  %>% mutate(ObsPred = 'Observed')
dobsEx[is.na(dobsEx)] = 0 #fill with zero operation time for values with no data
dpred = d %>% group_by(TrackCode, Operation = OperationPred) %>% summarize(n=n()) %>% mutate(ObsPred = 'Predicted')
dpred$Operation = as.factor(dpred$Operation)
dpred$TrackCode = as.factor(dpred$TrackCode)
dpredEx = expand.grid(TrackCode = levels(dpred$TrackCode), Operation = levels(dpred$Operation)) #to get values for all operations and fishing trips (trackCode)
dpredEx = left_join(dpredEx, dpred, by=c('TrackCode', 'Operation')) %>% arrange(TrackCode)  %>% mutate(ObsPred = 'Predicted')
dpredEx[is.na(dpredEx)] = 0
if (model_tested == 'Multiclass model' ){dd$Operation = factor(dd$Operation, levels=c('F','T','C'))
} else if (model_tested == 'Binary model' | model_tested == 'Speed filter'){dd$Operation = factor(dd$Operation, levels=c('C','AN'))}
ggplot(dd) +
geom_boxplot(aes(x=Operation, y=(n*meanFtimePoint)/60, fill=ObsPred))+
theme_bw()+
theme(legend.title = element_blank())+
ggtitle(model_tested)+
ylab('Daily vessel operation time (h/day)')+
theme(axis.text.x = element_text(size=13))
d= read.csv(paste0('results/', model_tested, '/fishingEffortCheck/vmsOp2_pred.csv'))
d$ObservedOp = as.factor(d$ObservedOp)
d$PredictedOp = as.factor(d$OperationPred)
dobs = d %>% group_by(TrackCode, Operation = ObservedOp) %>% summarize(n=n())  %>% mutate(ObsPred = 'Observed')
dobs$Operation = as.factor(dobs$Operation)
dobs$TrackCode = as.factor(dobs$TrackCode)
dobsEx = expand.grid(TrackCode = levels(dobs$TrackCode), Operation = levels(dobs$Operation)) #to get values for all operations and fishing trips (trackCode)
dobsEx = left_join(dobsEx, dobs, by=c('TrackCode', 'Operation')) %>% arrange(TrackCode)  %>% mutate(ObsPred = 'Observed')
dobsEx[is.na(dobsEx)] = 0 #fill with zero operation time for values with no data
dpred = d %>% group_by(TrackCode, Operation = OperationPred) %>% summarize(n=n()) %>% mutate(ObsPred = 'Predicted')
dpred$Operation = as.factor(dpred$Operation)
dpred$TrackCode = as.factor(dpred$TrackCode)
dpredEx = expand.grid(TrackCode = levels(dpred$TrackCode), Operation = levels(dpred$Operation)) #to get values for all operations and fishing trips (trackCode)
dpredEx = left_join(dpredEx, dpred, by=c('TrackCode', 'Operation')) %>% arrange(TrackCode)  %>% mutate(ObsPred = 'Predicted')
dpredEx[is.na(dpredEx)] = 0
dd = rbind(dobsEx, dpredEx)
if (model_tested == 'Multiclass model' ){dd$Operation = factor(dd$Operation, levels=c('F','T','C'))
} else if (model_tested == 'Binary model' | model_tested == 'Speed filter'){dd$Operation = factor(dd$Operation, levels=c('C','AN'))}
ggplot(dd) +
geom_boxplot(aes(x=Operation, y=(n*meanFtimePoint)/60, fill=ObsPred))+
theme_bw()+
theme(legend.title = element_blank())+
ggtitle(model_tested)+
ylab('Daily vessel operation time (h/day)')+
theme(axis.text.x = element_text(size=13))
ggsave(paste0('results/', model_tested, '/fishingEffortCheck/Effort_by_trip.jpeg'), units='px', height = 1000, width = 1200)
#stats
summary(aov((n*meanFtimePoint)/60 ~ Operation * ObsPred, data=dd))
model_tested='binaryModel'
d= read.csv(paste0('results/', model_tested, '/fishingEffortCheck/vmsOp2_pred.csv'))
d$ObservedOp = as.factor(d$ObservedOp)
d$PredictedOp = as.factor(d$OperationPred)
dobs = d %>% group_by(TrackCode, Operation = ObservedOp) %>% summarize(n=n())  %>% mutate(ObsPred = 'Observed')
dobs$Operation = as.factor(dobs$Operation)
dobs$TrackCode = as.factor(dobs$TrackCode)
dobsEx = expand.grid(TrackCode = levels(dobs$TrackCode), Operation = levels(dobs$Operation)) #to get values for all operations and fishing trips (trackCode)
dobsEx = left_join(dobsEx, dobs, by=c('TrackCode', 'Operation')) %>% arrange(TrackCode)  %>% mutate(ObsPred = 'Observed')
dobsEx[is.na(dobsEx)] = 0 #fill with zero operation time for values with no data
dpred = d %>% group_by(TrackCode, Operation = OperationPred) %>% summarize(n=n()) %>% mutate(ObsPred = 'Predicted')
dpred$Operation = as.factor(dpred$Operation)
dpred$TrackCode = as.factor(dpred$TrackCode)
dpredEx = expand.grid(TrackCode = levels(dpred$TrackCode), Operation = levels(dpred$Operation)) #to get values for all operations and fishing trips (trackCode)
dpredEx = left_join(dpredEx, dpred, by=c('TrackCode', 'Operation')) %>% arrange(TrackCode)  %>% mutate(ObsPred = 'Predicted')
dpredEx[is.na(dpredEx)] = 0
dd = rbind(dobsEx, dpredEx)
if (model_tested == 'Multiclass model' ){dd$Operation = factor(dd$Operation, levels=c('F','T','C'))
} else if (model_tested == 'Binary model' | model_tested == 'Speed filter'){dd$Operation = factor(dd$Operation, levels=c('F','TC'))}
ggplot(dd) +
geom_boxplot(aes(x=Operation, y=(n*meanFtimePoint)/60, fill=ObsPred))+
theme_bw()+
theme(legend.title = element_blank())+
ggtitle(model_tested)+
ylab('Daily vessel operation time (h/day)')+
theme(axis.text.x = element_text(size=13))
ggsave(paste0('results/', model_tested, '/fishingEffortCheck/Effort_by_trip.jpeg'), units='px', height = 1000, width = 1200)
#stats
summary(aov((n*meanFtimePoint)/60 ~ Operation * ObsPred, data=dd))
model_tested = 'speedFilter'
d= read.csv(paste0('results/', model_tested, '/fishingEffortCheck/vmsOp2_pred.csv'))
d$ObservedOp = as.factor(d$ObservedOp)
d$PredictedOp = as.factor(d$OperationPred)
dobs = d %>% group_by(TrackCode, Operation = ObservedOp) %>% summarize(n=n())  %>% mutate(ObsPred = 'Observed')
dobs$Operation = as.factor(dobs$Operation)
dobs$TrackCode = as.factor(dobs$TrackCode)
dobsEx = expand.grid(TrackCode = levels(dobs$TrackCode), Operation = levels(dobs$Operation)) #to get values for all operations and fishing trips (trackCode)
dobsEx = left_join(dobsEx, dobs, by=c('TrackCode', 'Operation')) %>% arrange(TrackCode)  %>% mutate(ObsPred = 'Observed')
dobsEx[is.na(dobsEx)] = 0 #fill with zero operation time for values with no data
dpred = d %>% group_by(TrackCode, Operation = OperationPred) %>% summarize(n=n()) %>% mutate(ObsPred = 'Predicted')
dpred$Operation = as.factor(dpred$Operation)
dpred$TrackCode = as.factor(dpred$TrackCode)
dpredEx = expand.grid(TrackCode = levels(dpred$TrackCode), Operation = levels(dpred$Operation)) #to get values for all operations and fishing trips (trackCode)
dpredEx = left_join(dpredEx, dpred, by=c('TrackCode', 'Operation')) %>% arrange(TrackCode)  %>% mutate(ObsPred = 'Predicted')
dpredEx[is.na(dpredEx)] = 0
dd = rbind(dobsEx, dpredEx)
if (model_tested == 'Multiclass model' ){dd$Operation = factor(dd$Operation, levels=c('F','T','C'))
} else if (model_tested == 'Binary model' | model_tested == 'Speed filter'){dd$Operation = factor(dd$Operation, levels=c('F','TC'))}
ggplot(dd) +
geom_boxplot(aes(x=Operation, y=(n*meanFtimePoint)/60, fill=ObsPred))+
theme_bw()+
theme(legend.title = element_blank())+
ggtitle(model_tested)+
ylab('Daily vessel operation time (h/day)')+
theme(axis.text.x = element_text(size=13))
ggsave(paste0('results/', model_tested, '/fishingEffortCheck/Effort_by_trip.jpeg'), units='px', height = 1000, width = 1200)
#stats
summary(aov((n*meanFtimePoint)/60 ~ Operation * ObsPred, data=dd))
model_tested = 'speedFilter'
d= read.csv(paste0('results/', model_tested, '/fishingEffortCheck/vmsOp2_pred.csv'))
d$ObservedOp = as.factor(d$ObservedOp)
d$PredictedOp = as.factor(d$OperationPred)
dobs = d %>% group_by(TrackCode, Operation = ObservedOp) %>% summarize(n=n())  %>% mutate(ObsPred = 'Observed')
dobs$Operation = as.factor(dobs$Operation)
dobs$TrackCode = as.factor(dobs$TrackCode)
dobsEx = expand.grid(TrackCode = levels(dobs$TrackCode), Operation = levels(dobs$Operation)) #to get values for all operations and fishing trips (trackCode)
dobsEx = left_join(dobsEx, dobs, by=c('TrackCode', 'Operation')) %>% arrange(TrackCode)  %>% mutate(ObsPred = 'Observed')
dobsEx[is.na(dobsEx)] = 0 #fill with zero operation time for values with no data
dpred = d %>% group_by(TrackCode, Operation = OperationPred) %>% summarize(n=n()) %>% mutate(ObsPred = 'Predicted')
dpred$Operation = as.factor(dpred$Operation)
dpred$TrackCode = as.factor(dpred$TrackCode)
dpredEx = expand.grid(TrackCode = levels(dpred$TrackCode), Operation = levels(dpred$Operation)) #to get values for all operations and fishing trips (trackCode)
dpredEx = left_join(dpredEx, dpred, by=c('TrackCode', 'Operation')) %>% arrange(TrackCode)  %>% mutate(ObsPred = 'Predicted')
dpredEx[is.na(dpredEx)] = 0
dd = rbind(dobsEx, dpredEx)
if (model_tested == 'Multiclass model' ){dd$Operation = factor(dd$Operation, levels=c('F','T','C'))
} else if (model_tested == 'Binary model' | model_tested == 'Speed filter'){dd$Operation = factor(dd$Operation, levels=c('F','TC'))}
ggplot(dd) +
geom_boxplot(aes(x=Operation, y=(n*meanFtimePoint)/60, fill=ObsPred))+
theme_bw()+
theme(legend.title = element_blank())+
ggtitle(model_tested)+
ylab('Daily vessel operation time (h/day)')+
theme(axis.text.x = element_text(size=13))
summary(dd)
summary(dd %>% filter(Operation=='F' & ObsPred == 'Observed))
)
summary(dd %>% filter(Operation=='F' & ObsPred == 'Observed))
summary(dd %>% filter(Operation=='F' & ObsPred == 'Observed'))
summary(dd %>% mutate(time=(n*meanFtimePoint)/60) %>% filter(Operation=='F' & ObsPred == 'Observed'))
summary(dd %>% mutate(time=(n*meanFtimePoint)/60) %>% filter(Operation=='F' & ObsPred == 'Predicted'))
summary(dd %>% mutate(time=(n*meanFtimePoint)/60) %>% filter(Operation=='TC' & ObsPred == 'Observed'))
summary(dd %>% mutate(time=(n*meanFtimePoint)/60) %>% filter(Operation=='TC' & ObsPred == 'Predicted'))
4.78-2.5
model_tested='multiclassModel'
d= read.csv(paste0('results/', model_tested, '/fishingEffortCheck/vmsOp2_pred.csv'))
d$ObservedOp = as.factor(d$ObservedOp)
d$PredictedOp = as.factor(d$OperationPred)
dobs = d %>% group_by(TrackCode, Operation = ObservedOp) %>% summarize(n=n())  %>% mutate(ObsPred = 'Observed')
dobs$Operation = as.factor(dobs$Operation)
dobs$TrackCode = as.factor(dobs$TrackCode)
dobsEx = expand.grid(TrackCode = levels(dobs$TrackCode), Operation = levels(dobs$Operation)) #to get values for all operations and fishing trips (trackCode)
dobsEx = left_join(dobsEx, dobs, by=c('TrackCode', 'Operation')) %>% arrange(TrackCode)  %>% mutate(ObsPred = 'Observed')
dobsEx[is.na(dobsEx)] = 0 #fill with zero operation time for values with no data
dpred = d %>% group_by(TrackCode, Operation = OperationPred) %>% summarize(n=n()) %>% mutate(ObsPred = 'Predicted')
dpred$Operation = as.factor(dpred$Operation)
dpred$TrackCode = as.factor(dpred$TrackCode)
dpredEx = expand.grid(TrackCode = levels(dpred$TrackCode), Operation = levels(dpred$Operation)) #to get values for all operations and fishing trips (trackCode)
dpredEx = left_join(dpredEx, dpred, by=c('TrackCode', 'Operation')) %>% arrange(TrackCode)  %>% mutate(ObsPred = 'Predicted')
dpredEx[is.na(dpredEx)] = 0
dd = rbind(dobsEx, dpredEx)
if (model_tested == 'Multiclass model' ){dd$Operation = factor(dd$Operation, levels=c('F','T','C'))
} else if (model_tested == 'Binary model' | model_tested == 'Speed filter'){dd$Operation = factor(dd$Operation, levels=c('F','TC'))}
ggplot(dd) +
geom_boxplot(aes(x=Operation, y=(n*meanFtimePoint)/60, fill=ObsPred))+
theme_bw()+
theme(legend.title = element_blank())+
ggtitle(model_tested)+
ylab('Daily vessel operation time (h/day)')+
theme(axis.text.x = element_text(size=13))
dd$Operation = factor(dd$Operation, levels=c('F','T','C')
)
ggplot(dd) +
geom_boxplot(aes(x=Operation, y=(n*meanFtimePoint)/60, fill=ObsPred))+
theme_bw()+
theme(legend.title = element_blank())+
ggtitle(model_tested)+
ylab('Daily vessel operation time (h/day)')+
theme(axis.text.x = element_text(size=13))
if (model_tested == 'multiclassModel' ){dd$Operation = factor(dd$Operation, levels=c('F','T','C'))
} else if (model_tested == 'binaryModel' | model_tested == 'speedFilter'){dd$Operation = factor(dd$Operation, levels=c('F','TC'))}
ggplot(dd) +
geom_boxplot(aes(x=Operation, y=(n*meanFtimePoint)/60, fill=ObsPred))+
theme_bw()+
theme(legend.title = element_blank())+
ggtitle(model_tested)+
ylab('Daily vessel operation time (h/day)')+
theme(axis.text.x = element_text(size=13))
ggsave(paste0('results/', model_tested, '/fishingEffortCheck/Effort_by_trip.jpeg'), units='px', height = 1000, width = 1200)
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
model_tested='multiclassModel'
#1. Kmsq fishing estimates by grid. VMS observed vs VMS predicted
Vms1km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/1km_VMSobsVMSpred.csv'))
#1. Kmsq fishing estimates by grid. VMS observed vs VMS predicted
Vms1km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/1km_VMSobsVMSpred.csv'))
Vms2km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/2km_VMSobsVMSpred.csv'))
Vms3km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/3km_VMSobsVMSpred.csv'))
Vms4km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/4km_VMSobsVMSpred.csv'))
Vms5km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/5km_VMSobsVMSpred.csv'))
Vms1km$Grid = '1km2'
Vms2km$Grid = '2km2'
Vms3km$Grid = '3km2'
Vms4km$Grid = '4km2'
Vms5km$Grid = '5km2'
df = rbind(Vms1km, Vms2km, Vms3km, Vms4km, Vms5km)
head(df)
#stats for correlations
df2 = df %>% select(kmsqId, Grid, Operation, VMSOpTime.min._ObservedOpm VMSOpTime.min._PredictedOp)
#stats for correlations
df2 = df %>% select(kmsqId, Grid, Operation, VMSOpTime.min._ObservedOp, VMSOpTime.min._PredictedOp)
?melt
melt(setDT(df2))
library(reshape2)
melt(setDT(df2))
?setDT
?melt
melt(df2, id.vars = c(kmsqId, Grid, Operation), variable.name = time)
?setDT
melt(setDT(df2), id.vars = c(kmsqId, Grid, Operation), variable.name = time)
library(data.table)
melt(setDT(df2), id.vars = c(kmsqId, Grid, Operation), variable.name = time)
melt(setDT(df2), id.vars = c('kmsqId', 'Grid', 'Operation'), variable.name = 'time')
#stats for correlations
df2 = df %>% select(kmsqId, Grid, Operation, VMSOpTime.min._ObservedOp, VMSOpTime.min._PredictedOp)
df2 = melt(setDT(df2), id.vars = c('kmsqId', 'Grid', 'Operation'), variable.name = 'ObsPred')
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value))
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, color=time))
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, group=time))
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=time))
head(df2)
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=ObsPred))
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=ObsPred))+
facet_grid(rows=vars(Grid))
?facet_grid
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=ObsPred))+
facet_grid(rows=vars(Grid), scales='free')
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=ObsPred))+
facet_grid(cols=vars(Grid), scales='free')
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=ObsPred))+
facet_grid(rows=vars(Grid), scales='free')
df2[df2$ObsPred = 'VMSOpTime.min._ObservedOp', 4]
df2[df2$ObsPred == 'VMSOpTime.min._ObservedOp', 4]
df2[df2$ObsPred == 'VMSOpTime.min._ObservedOp', 4] = 'Observed'
df2[df2$ObsPred == 'VMSOpTime.min._PredictedOp', 4] = 'Predicted'
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=ObsPred))+
facet_grid(rows=vars(Grid), scales='free')
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=ObsPred))+
facet_grid(rows=vars(Grid), scales='free')+
theme_bw()
ggsave(paste0('results/', model_tested, '/fishingEffortCheck/Effort_by_cell_boxplot.jpeg'), units='px', height = 1000, width = 1200)
ggsave(paste0('results/', model_tested, '/fishingEffortCheck/Effort_by_cell_boxplot.jpeg'), units='px', height = 4000, width = 2000)
ggsave(paste0('results/', model_tested, '/fishingEffortCheck/Effort_by_cell_boxplot.jpeg'), units='px', height = 3500, width = 1500)
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=ObsPred))+
facet_grid(rows=vars(Grid), scales='free')+
theme_bw()+
ggtitle(model_tested)
ggsave(paste0('results/', model_tested, '/fishingEffortCheck/Effort_by_cell_boxplot.jpeg'), units='px', height = 3500, width = 1500)
model_tested='binaryModel'
#1. Kmsq fishing estimates by grid. VMS observed vs VMS predicted
Vms1km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/1km_VMSobsVMSpred.csv'))
Vms2km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/2km_VMSobsVMSpred.csv'))
Vms3km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/3km_VMSobsVMSpred.csv'))
Vms4km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/4km_VMSobsVMSpred.csv'))
Vms5km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/5km_VMSobsVMSpred.csv'))
Vms1km$Grid = '1km2'
Vms2km$Grid = '2km2'
Vms3km$Grid = '3km2'
Vms4km$Grid = '4km2'
Vms5km$Grid = '5km2'
df = rbind(Vms1km, Vms2km, Vms3km, Vms4km, Vms5km)
max_y=max(df$VMSOpTime.min._PredictedOp)
df$Grid = as.factor(df$Grid)
if (model_tested == 'multiclassModel' ){df$Operation = factor(df$Operation, levels=c('F','T','C'))
} else if (model_tested == 'binaryModel' | model_tested == 'speedFilter'){df$Operation = factor(df$Operation, levels=c('F','TC'))}
#VMS observed Vs VMS predicted
ggplot(df, aes(x=VMSOpTime.min._ObservedOp, y=VMSOpTime.min._PredictedOp, color=Operation))+
geom_point()+
facet_grid(rows=vars(Operation), cols=vars(Grid), scales='free')+
theme_bw()+
geom_smooth(method='lm', se=TRUE)+
geom_abline(slope=1, linetype='dashed')+
stat_cor(label.y = max_y-150, color='black')+
stat_regline_equation(label.y = max_y-250, color='black')+
theme(legend.position = 'none')+
xlab('OBSERVED VMS operation time (min/km2)')+
ylab('PREDICTED VMS operation time (min/km2)')+
ggtitle(model_tested)
#stats for correlations
df2 = df %>% select(kmsqId, Grid, Operation, VMSOpTime.min._ObservedOp, VMSOpTime.min._PredictedOp)
df2 = melt(setDT(df2), id.vars = c('kmsqId', 'Grid', 'Operation'), variable.name = 'ObsPred')
df2[df2$ObsPred == 'VMSOpTime.min._ObservedOp', 4] = 'Observed'
df2[df2$ObsPred == 'VMSOpTime.min._PredictedOp', 4] = 'Predicted'
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=ObsPred))+
facet_grid(rows=vars(Grid), scales='free')+
theme_bw()+
ggtitle(model_tested)
ggsave(paste0('results/', model_tested, '/fishingEffortCheck/Effort_by_cell_boxplot.jpeg'), units='px', height = 3500, width = 1500)
model_tested = 'speedFilter'
#1. Kmsq fishing estimates by grid. VMS observed vs VMS predicted
Vms1km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/1km_VMSobsVMSpred.csv'))
Vms2km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/2km_VMSobsVMSpred.csv'))
Vms3km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/3km_VMSobsVMSpred.csv'))
Vms4km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/4km_VMSobsVMSpred.csv'))
Vms5km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/5km_VMSobsVMSpred.csv'))
Vms1km$Grid = '1km2'
Vms2km$Grid = '2km2'
Vms3km$Grid = '3km2'
Vms4km$Grid = '4km2'
Vms5km$Grid = '5km2'
df = rbind(Vms1km, Vms2km, Vms3km, Vms4km, Vms5km)
max_y=max(df$VMSOpTime.min._PredictedOp)
df$Grid = as.factor(df$Grid)
if (model_tested == 'multiclassModel' ){df$Operation = factor(df$Operation, levels=c('F','T','C'))
} else if (model_tested == 'binaryModel' | model_tested == 'speedFilter'){df$Operation = factor(df$Operation, levels=c('F','TC'))}
#VMS observed Vs VMS predicted
ggplot(df, aes(x=VMSOpTime.min._ObservedOp, y=VMSOpTime.min._PredictedOp, color=Operation))+
geom_point()+
facet_grid(rows=vars(Operation), cols=vars(Grid), scales='free')+
theme_bw()+
geom_smooth(method='lm', se=TRUE)+
geom_abline(slope=1, linetype='dashed')+
stat_cor(label.y = max_y-150, color='black')+
stat_regline_equation(label.y = max_y-250, color='black')+
theme(legend.position = 'none')+
xlab('OBSERVED VMS operation time (min/km2)')+
ylab('PREDICTED VMS operation time (min/km2)')+
ggtitle(model_tested)
#stats for correlations
df2 = df %>% select(kmsqId, Grid, Operation, VMSOpTime.min._ObservedOp, VMSOpTime.min._PredictedOp)
df2 = melt(setDT(df2), id.vars = c('kmsqId', 'Grid', 'Operation'), variable.name = 'ObsPred')
df2[df2$ObsPred == 'VMSOpTime.min._ObservedOp', 4] = 'Observed'
df2[df2$ObsPred == 'VMSOpTime.min._PredictedOp', 4] = 'Predicted'
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=ObsPred))+
facet_grid(rows=vars(Grid), scales='free')+
theme_bw()+
ggtitle(model_tested)
ggsave(paste0('results/', model_tested, '/fishingEffortCheck/Effort_by_cell_boxplot.jpeg'), units='px', height = 3500, width = 1500)
summary(aov(value ~ Operation*Grid*ObsPred, data=df2))
summary(aov(value ~ Grid + Operation*ObsPred, data=df2))
model_tested='multiclassModel'
#1. Kmsq fishing estimates by grid. VMS observed vs VMS predicted
Vms1km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/1km_VMSobsVMSpred.csv'))
Vms2km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/2km_VMSobsVMSpred.csv'))
Vms3km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/3km_VMSobsVMSpred.csv'))
Vms4km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/4km_VMSobsVMSpred.csv'))
Vms5km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/5km_VMSobsVMSpred.csv'))
Vms1km$Grid = '1km2'
Vms2km$Grid = '2km2'
Vms3km$Grid = '3km2'
Vms4km$Grid = '4km2'
Vms5km$Grid = '5km2'
df = rbind(Vms1km, Vms2km, Vms3km, Vms4km, Vms5km)
max_y=max(df$VMSOpTime.min._PredictedOp)
df$Grid = as.factor(df$Grid)
if (model_tested == 'multiclassModel' ){df$Operation = factor(df$Operation, levels=c('F','T','C'))
} else if (model_tested == 'binaryModel' | model_tested == 'speedFilter'){df$Operation = factor(df$Operation, levels=c('F','TC'))}
#VMS observed Vs VMS predicted
ggplot(df, aes(x=VMSOpTime.min._ObservedOp, y=VMSOpTime.min._PredictedOp, color=Operation))+
geom_point()+
facet_grid(rows=vars(Operation), cols=vars(Grid), scales='free')+
theme_bw()+
geom_smooth(method='lm', se=TRUE)+
geom_abline(slope=1, linetype='dashed')+
stat_cor(label.y = max_y-150, color='black')+
stat_regline_equation(label.y = max_y-250, color='black')+
theme(legend.position = 'none')+
xlab('OBSERVED VMS operation time (min/km2)')+
ylab('PREDICTED VMS operation time (min/km2)')+
ggtitle(model_tested)
#stats for correlations
df2 = df %>% select(kmsqId, Grid, Operation, VMSOpTime.min._ObservedOp, VMSOpTime.min._PredictedOp)
df2 = melt(setDT(df2), id.vars = c('kmsqId', 'Grid', 'Operation'), variable.name = 'ObsPred')
df2[df2$ObsPred == 'VMSOpTime.min._ObservedOp', 4] = 'Observed'
df2[df2$ObsPred == 'VMSOpTime.min._PredictedOp', 4] = 'Predicted'
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=ObsPred))+
facet_grid(rows=vars(Grid), scales='free')+
theme_bw()+
ggtitle(model_tested)
summary(aov(value ~ Grid + Operation*ObsPred, data=df2))
model_tested='binaryModel'
#1. Kmsq fishing estimates by grid. VMS observed vs VMS predicted
Vms1km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/1km_VMSobsVMSpred.csv'))
Vms2km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/2km_VMSobsVMSpred.csv'))
Vms3km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/3km_VMSobsVMSpred.csv'))
Vms4km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/4km_VMSobsVMSpred.csv'))
Vms5km = read.csv(paste0('results/', model_tested,'/fishingEffortCheck/5km_VMSobsVMSpred.csv'))
Vms1km$Grid = '1km2'
Vms2km$Grid = '2km2'
Vms3km$Grid = '3km2'
Vms4km$Grid = '4km2'
Vms5km$Grid = '5km2'
df = rbind(Vms1km, Vms2km, Vms3km, Vms4km, Vms5km)
max_y=max(df$VMSOpTime.min._PredictedOp)
df$Grid = as.factor(df$Grid)
if (model_tested == 'multiclassModel' ){df$Operation = factor(df$Operation, levels=c('F','T','C'))
} else if (model_tested == 'binaryModel' | model_tested == 'speedFilter'){df$Operation = factor(df$Operation, levels=c('F','TC'))}
#VMS observed Vs VMS predicted
ggplot(df, aes(x=VMSOpTime.min._ObservedOp, y=VMSOpTime.min._PredictedOp, color=Operation))+
geom_point()+
facet_grid(rows=vars(Operation), cols=vars(Grid), scales='free')+
theme_bw()+
geom_smooth(method='lm', se=TRUE)+
geom_abline(slope=1, linetype='dashed')+
stat_cor(label.y = max_y-150, color='black')+
stat_regline_equation(label.y = max_y-250, color='black')+
theme(legend.position = 'none')+
xlab('OBSERVED VMS operation time (min/km2)')+
ylab('PREDICTED VMS operation time (min/km2)')+
ggtitle(model_tested)
#stats for correlations
df2 = df %>% select(kmsqId, Grid, Operation, VMSOpTime.min._ObservedOp, VMSOpTime.min._PredictedOp)
df2 = melt(setDT(df2), id.vars = c('kmsqId', 'Grid', 'Operation'), variable.name = 'ObsPred')
df2[df2$ObsPred == 'VMSOpTime.min._ObservedOp', 4] = 'Observed'
df2[df2$ObsPred == 'VMSOpTime.min._PredictedOp', 4] = 'Predicted'
ggplot(df2)+
geom_boxplot(aes(x=Operation, y=value, fill=ObsPred))+
facet_grid(rows=vars(Grid), scales='free')+
theme_bw()+
ggtitle(model_tested)
ggsave(paste0('results/', model_tested, '/fishingEffortCheck/Effort_by_cell_boxplot.jpeg'), units='px', height = 3500, width = 1500)
summary(aov(value ~ Grid + Operation*ObsPred, data=df2))
d= read.csv(paste0('results/', model_tested, '/fishingEffortCheck/vmsOp2_pred.csv'))
#3. Speed histogram analysis
#speed histograms
ggplot(d)+
geom_histogram(aes(x=Speed, fill=PredictedOp), binwidth = 0.2)
ggplot(d)+
geom_histogram(aes(x=Speed, fill=ObservedOp), binwidth = 0.2)
speeddf = d %>% filter(Speed < 12) %>% select(Speed)
speed = speeddf$Speed
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd0(speed)), display0.29*=TRUE)
plot(density(d$Speed, bw=1.12))
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd0(speed)), display=TRUE)
plot(density(d$Speed, bw=1.12))
?locmodes
??locmodes
library(multimode)
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd0(speed)), display=TRUE)
d = read.csv(paste0('results/speedFilter/fishingEffortCheck/vmsOp2_pred.csv'))
rm(list=ls())
rm(list=ls())
d = read.csv(paste0('results/speedFilter/fishingEffortCheck/vmsOp2_pred.csv'))
#3. Speed histogram analysis
#speed histograms
ggplot(d)+
geom_histogram(aes(x=Speed, fill=PredictedOp), binwidth = 0.2)
ggplot(d)+
geom_histogram(aes(x=Speed, fill=ObservedOp), binwidth = 0.2)
speeddf = d %>% filter(Speed < 12) %>% select(Speed)
speed = speeddf$Speed
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd0(speed)), display=TRUE)
#speedFilter
ggplot(d)+
geom_histogram(aes(x=Speed, fill=Fishing), binwidth = 0.2)
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd0(speed)), display=TRUE)
plot(density(d$Speed, bw=1.12))
loc
loc$locations
loc$locations[1]
ggplot(d)+
geom_histogram()
ggplot(d)+
geom_histogram(aes(y=speed))
ggplot(d)+
geom_histogram(aes(y=Speed))
ggplot(d)+
geom_histogram(aes(x=Speed))
plot(density(d$Speed))
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd0(speed)), display=TRUE)
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd0(speed)), display=TRUE, title('h9'))
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd0(speed)), display=TRUE, xlab='Speed')
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd0(speed)), display=TRUE, xlab='Speed (kn)')
