library(sf)
rm(list=ls())
d = read.csv('/home/joan/Desktop/ICM_SAP/GIS/GFCM/600-800m/vmsint_600-800m_otb.csv')
d = read.csv('C:/Users/jsala/ownCloud/GIS/GFCM/600-800m/vmsint_600-800m_otb.csv')
d$extract = as.factor(d$extract)
d$Code = as.factor(d$Code)
d$BasePortCode = as.factor(d$BasePortCode)
##2. check general (all fleet) ARA landings distribution
d2 = d %>% group_by(extract, range) %>% summarize(Kg_TOT = sum(Kg_TOT, na.rm=T),
E_TOT = sum(E_TOT, na.rm=T),
Kg_ARA=sum(Kg_ARA, na.rm=T),
E_ARA = sum(E_ARA, na.rm=T)) %>% arrange(extract, range)
d2$range = factor(d2$range, levels = c("0-50", "50-100", "100-200", "200-300", "300-400", "400-500", "500-600", "600-700", "700-800", "800-900", "900-1000"))
d2[is.na(d2)] = 0
ggplot(d2, aes(x=range, y=E_ARA, color=extract, group=extract))+
geom_line()
##3. recode ranges factor
d$range2 <- dplyr::recode_factor(d$range, "0-50" = "0-400", "50-100" = "0-400" , "100-200" = "0-400", "200-300" = "0-400", "300-400" = "0-400",
"400-500" = "400-600", "500-600" = "400-600",
"600-700" = "600-800", "700-800" = "600-800",
"800-900" = "800-1000", "900-1000" = "800-1000")
##sum by new ranges factor
d3 <- d %>% group_by(Code, extract, range2) %>% summarize(Kg_TOT=sum(Kg_TOT), E_TOT=sum(E_TOT),
Kg_ARA=sum(Kg_ARA), E_ARA=sum(E_ARA),
Kg_HKE=sum(Kg_HKE), E_HKE=sum(E_HKE))
d3 = as.data.frame(d3)
##4. Add all factor levels combinations
levels = expand.grid(Code = levels(d3$Code), range2=levels(d3$range2), year = levels(d3$extract))
levels = as.data.frame(levels)
d3 = left_join(levels, d3, by=c("Code"="Code", "range2"="range2", "year" = "extract"))
summary(d$extract)
summary(d3)
#Comprovacions
d3 %>% group_by(Code, range2) %>% summarize(n=n()) %>% filter(n!=5)
# summary(d3)
# d <- subset(d, extract != "NA") # hem eliminat les files on els anys eren NA i la resta de columnes eren zero
d3[is.na(d3)] = 0
#6. DATA BY FLEET
dF = d3 %>% group_by(range2, year) %>% summarize(Kg_TOT=sum(Kg_TOT), E_TOT=sum(E_TOT),
Kg_ARA=sum(Kg_ARA), E_ARA=sum(E_ARA),
Kg_HKE=sum(Kg_HKE), E_HKE=sum(E_HKE))
#add year totals by range
dF <- dF %>% group_by(year) %>% mutate(totalKg=sum(Kg_TOT), totalE=sum(E_TOT),
totalKg_ARA=sum(Kg_ARA), totalE_ARA=sum(E_ARA),
totalKg_HKE=sum(Kg_HKE), totalE_HKE=sum(E_HKE))
#add % by range
dF = dF %>% mutate(Kg_TOTp=(Kg_TOT/totalKg)*100, E_TOTp=(E_TOT/totalE)*100,
Kg_ARAp=(Kg_ARA/totalKg_ARA)*100, E_ARAp=(E_ARA/totalE_ARA)*100,
Kg_HKEp=(Kg_HKE/totalKg_HKE)*100, E_HKEp=(E_HKE/totalE_HKE)*100) %>% arrange(range2)
#mean by range
dFM = dF %>% group_by(range2) %>% summarize(Kg_TOTM = mean(Kg_TOT), Kg_TOTMe=(sd(Kg_TOT)/sqrt(5))*1.96,
E_TOTM = mean(E_TOT), E_TOTMe=(sd(E_TOT)/sqrt(5))*1.96,
Kg_ARAM = mean(Kg_ARA), Kg_ARAMe=(sd(Kg_ARA)/sqrt(5))*1.96,
E_ARAM = mean(E_ARA), E_ARAMe=(sd(E_ARA)/sqrt(5))*1.96,
Kg_HKEM = mean(Kg_HKE), Kg_HKEMe=(sd(Kg_HKE)/sqrt(5))*1.96,
E_HKEM = mean(E_HKE), E_HKEMe=(sd(E_HKE)/sqrt(5))*1.96,
Kg_TOTpM=mean(Kg_TOTp), Kg_TOTpMe=(sd(Kg_TOTp)/sqrt(5))*1.96,
E_TOTpM=mean(E_TOTp), E_TOTpMe=(sd(E_TOTp)/sqrt(5))*1.96,
Kg_ARApM=mean(Kg_ARAp), Kg_ARApMe=(sd(Kg_ARAp)/sqrt(5))*1.96,
E_ARApM=mean(E_ARAp), E_ARApMe=(sd(E_ARAp)/sqrt(5))*1.96,
Kg_HKEpM=mean(Kg_HKEp), Kg_HKEpMe=(sd(Kg_HKEp)/sqrt(5))*1.96,
E_HKEpM=mean(E_HKEp), E_HKEpMe=(sd(E_HKEp)/sqrt(5))*1.96)
ggplot(dFM, aes(x=2, y=E_HKEM, fill=range2))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y" , start=0)+
theme_void()
ggplot(dFM, aes(x=2, y=Kg_TOTM, fill=range2))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y" , start=0)+
theme_void()
ggplot(dFM, aes(x=2, y=E_TOTM, fill=range2))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y" , start=0)+
theme_void()
ggplot(dFM, aes(x=2, y=E_ARAM, fill=range2))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y" , start=0)+
theme_void()
dFM
dFM
dFM
dFM %>% summarize(p=sum(E_ARApM))
dFM %>% summarize(p=sum(E_TOTpM))
dFM %>% summarize(p=sum(Kg_ARApM))
#5. DATA BY VESSEL
#get percentages
dT <- d3 %>% group_by(Code, year) %>% mutate(totalKg=sum(Kg_TOT), totalE=sum(E_TOT),
totalKg_ARA=sum(Kg_ARA), totalE_ARA=sum(E_ARA),
totalKg_HKE=sum(Kg_HKE), totalE_HKE=sum(E_HKE))º
dT = as.data.frame(dT)
##sum by new ranges factor
d3 <- d %>% group_by(Code, extract, range2) %>% summarize(Kg_TOT=sum(Kg_TOT), E_TOT=sum(E_TOT),
Kg_ARA=sum(Kg_ARA), E_ARA=sum(E_ARA),
Kg_HKE=sum(Kg_HKE), E_HKE=sum(E_HKE))
d3 = as.data.frame(d3)
##4. Add all factor levels combinations
levels = expand.grid(Code = levels(d3$Code), range2=levels(d3$range2), year = levels(d3$extract))
levels = as.data.frame(levels)
d3 = left_join(levels, d3, by=c("Code"="Code", "range2"="range2", "year" = "extract"))
# summary(d3)
# d <- subset(d, extract != "NA") # hem eliminat les files on els anys eren NA i la resta de columnes eren zero
d3[is.na(d3)] = 0
#Comprovacions
d3 %>% group_by(Code, range2) %>% summarize(n=n()) %>% filter(n!=5)
#5. DATA BY VESSEL
#get percentages
dT <- d3 %>% group_by(Code, year) %>% mutate(totalKg=sum(Kg_TOT), totalE=sum(E_TOT),
totalKg_ARA=sum(Kg_ARA), totalE_ARA=sum(E_ARA),
totalKg_HKE=sum(Kg_HKE), totalE_HKE=sum(E_HKE))º
#5. DATA BY VESSEL
#get percentages
dT <- d3 %>% group_by(Code, year) %>% mutate(totalKg=sum(Kg_TOT), totalE=sum(E_TOT),
totalKg_ARA=sum(Kg_ARA), totalE_ARA=sum(E_ARA),
totalKg_HKE=sum(Kg_HKE), totalE_HKE=sum(E_HKE))
dT = as.data.frame(dT)
dT = dT  %>% mutate(Kg_TOTp=(Kg_TOT/totalKg)*100, E_TOTp=(E_TOT/totalE)*100,
Kg_ARAp=(Kg_ARA/totalKg_ARA)*100, E_ARAp=(E_ARA/totalE_ARA)*100,
Kg_HKEp=(Kg_HKE/totalKg_HKE)*100, E_HKEp=(E_HKE/totalE_HKE)*100) %>% arrange(Code, year)
dT[is.na(dT)] = 0
#check
#dT %>% group_by(Code, year) %>% summarize(nn=sum(Kg_TOTp)) %>% filter(as.factor(nn)!=100) %>% print(n=500)
dT %>% filter(is.na(Kg_TOTp)) # surten NAs per cada % on un valor Ã©s 0
#Mean by vessel and depth range
dM = dT %>% group_by(range2, Code) %>% summarize(Kg_TOTM = mean(Kg_TOT), Kg_TOTMe=(sd(Kg_TOT)/sqrt(5))*1.96,
E_TOTM = mean(E_TOT), E_TOTMe=(sd(E_TOT)/sqrt(5))*1.96,
Kg_ARAM = mean(Kg_ARA), Kg_ARAMe=(sd(Kg_ARA)/sqrt(5))*1.96,
E_ARAM = mean(E_ARA), E_ARAMe=(sd(E_ARA)/sqrt(5))*1.96,
Kg_HKEM = mean(Kg_HKE), Kg_HKEMe=(sd(Kg_HKE)/sqrt(5))*1.96,
E_HKEM = mean(E_HKE), E_HKEMe=(sd(E_HKE)/sqrt(5))*1.96,
Kg_TOTpM=mean(Kg_TOTp), Kg_TOTpMe=(sd(Kg_TOTp)/sqrt(5))*1.96,
E_TOTpM=mean(E_TOTp), E_TOTpMe=(sd(E_TOTp)/sqrt(5))*1.96,
Kg_ARApM=mean(Kg_ARAp), Kg_ARApMe=(sd(Kg_ARAp)/sqrt(5))*1.96,
E_ARApM=mean(E_ARAp), E_ARApMe=(sd(E_ARAp)/sqrt(5))*1.96,
Kg_HKEpM=mean(Kg_HKEp), Kg_HKEpMe=(sd(Kg_HKEp)/sqrt(5))*1.96,
E_HKEpM=mean(E_HKEp), E_HKEpMe=(sd(E_HKEp)/sqrt(5))*1.96)
dM = as.data.frame(dM)
dM
dM %>% group_by(Code) %>% summarize(p=sum(Kg_TOTpM))
dM %>% filter(Code=='ESP000000786')
dT %>% filter(Code=='ESP000000786')
dT %>% filter(Code=='ESP000000786')
dM %>% group_by(Code) %>% summarize(p=sum(Kg_TOTpM)) %>% filter(p!=100)
dM %>% group_by(Code) %>% summarize(p=sum(Kg_TOTpM)) %>% filter(p!=100) %>% arrange(Code)
dM = as.data.frame(dM)
#join info on BasePortCode and Area ####
#Com que ens hem carregat la columna BasePortCode perquÃ¨ algunes barques sortien a mÃ©s d'un port al llarg dels 5 anys, volem extreure quin Ã©s el port base de cada barca en l'any mÃ©s recent
ports = d %>% group_by(Code, portArea, extract, portName, BasePortCode) %>% summarize() %>% group_by(Code) %>% filter(as.numeric(extract)==max(as.numeric(extract))) %>% ungroup() %>%  mutate(id=row_number()) %>% arrange(Code)
ports %>% group_by(Code) %>% summarize(n=n()) %>% filter(n>1)
#three vessels with same year and two baseportcodes: ESP000009956, ESP000026598, ESP000027522. Assigned to the larger port:
ports %>% filter(Code=='ESP000009956') #linia 44
ports %>% filter(Code=='ESP000026598') #linia 207
ports %>% filter(Code=='ESP000027522') #linia 237
ports = ports %>% filter(id != 44, id!=207, id!=237) %>% select(-id)
dFull = left_join(dM, ports, by=c("Code"="Code"))
dFull$portArea <- as.factor(dFull$portArea)
dFull$portArea <- factor(dFull$portArea, levels=c("Nord", "Centre", "Sud"))
ggplot(dFull %>% filter(portArea == 'Nord'), aes(x=Code, y=E_TOTpM)) +
geom_bar(color = 'Black', fill='Blue', alpha=0.5, width=.75, position="dodge", stat="identity")+
facet_grid(rows=vars(portArea), cols=vars(range2))+
themePlots
####################fins aqui script joan###################################################################
##plots
themePlots = theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5, size=8),
axis.text.y = element_text(size=11),
axis.title = element_text(size=13),
plot.title=element_text(size=14,hjust=0.95, vjust=0.25, margin=margin(t=40,b=-30)))
ggplot(dFull %>% filter(portArea == 'Nord'), aes(x=Code, y=E_TOTpM)) +
geom_bar(color = 'Black', fill='Blue', alpha=0.5, width=.75, position="dodge", stat="identity")+
facet_grid(rows=vars(portArea), cols=vars(range2))+
themePlots
ggplot(dFull %>% filter(portArea == 'Nord'), aes(x=Code, y=E_ARApM)) +
geom_bar(color = 'Black', fill='Blue', alpha=0.5, width=.75, position="dodge", stat="identity")+
facet_grid(rows=vars(portArea), cols=vars(range2))+
themePlots
dFull %>% filter(E_TOTpM > 25)
dFull %>% filter(E_TOTpM > 25, portArea == 'Nord')
dFull %>% filter(E_TOTpM > 25, portArea == 'Nord', range2 == '600-800')
dM %>% group_by(Code) %>% summarize(p=sum(Kg_TOTpM)) %>% filter(p!=100) %>% arrange(Code)
dM %>% filter(Code=='ESP000007041')
dT %>% filter(Code=='ESP000007041')
##4. Add all factor levels combinations
#levels = expand.grid(Code = levels(d3$Code), range2=levels(d3$range2), year = levels(d3$extract))
levels = expand.grid(Code = levels(d3$Code), range2=levels(d3$range2))
levels = as.data.frame(levels)
##sum by new ranges factor
d3 <- d %>% group_by(Code, extract, range2) %>% summarize(Kg_TOT=sum(Kg_TOT), E_TOT=sum(E_TOT),
Kg_ARA=sum(Kg_ARA), E_ARA=sum(E_ARA),
Kg_HKE=sum(Kg_HKE), E_HKE=sum(E_HKE))
d3 = as.data.frame(d3)
##4. Add all factor levels combinations
#levels = expand.grid(Code = levels(d3$Code), range2=levels(d3$range2), year = levels(d3$extract))
levels = expand.grid(Code = levels(d3$Code), range2=levels(d3$range2))
levels = as.data.frame(levels)
d3 = left_join(levels, d3, by=c("Code"="Code", "range2"="range2", "year" = "extract"))
#d3 = left_join(levels, d3, by=c("Code"="Code", "range2"="range2", "year" = "extract"))
d3 = left_join(levels, d3, by=c("Code"="Code", "range2"="range2"))
d3 %>% group_by(Code) %>% filter(n=())
d3 %>% group_by(Code) %>% filter(n=n())
d3 %>% group_by(Code) %>% summarize(n=n())
d3 %>% group_by(Code, year) %>% summarize(n=n())
d3 %>% group_by(Code, extract) %>% summarize(n=n())
d3 %>% filter(Code=='ESP000000348')
levels
d3 %>% filter(Code=='ESP000000348')
##sum by new ranges factor
d3 <- d %>% group_by(Code, extract, range2) %>% summarize(Kg_TOT=sum(Kg_TOT), E_TOT=sum(E_TOT),
Kg_ARA=sum(Kg_ARA), E_ARA=sum(E_ARA),
Kg_HKE=sum(Kg_HKE), E_HKE=sum(E_HKE))
d3 = as.data.frame(d3)
##4. Add all factor levels combinations
levels = expand.grid(Code = levels(d3$Code), range2=levels(d3$range2), year = levels(d3$extract))
#levels = expand.grid(Code = levels(d3$Code), range2=levels(d3$range2))
levels = as.data.frame(levels)
d3 = left_join(levels, d3, by=c("Code"="Code", "range2"="range2", "year" = "extract"))
d3 %>% filter(Code=='ESP000000348')
d3 %>% group_by(Code, year) %>% summarize(kgTOT = sum(Kg_TOT))
d3 %>% group_by(Code, year) %>% summarize(kgTOT = sum(Kg_TOT, na.rm=T))
d3 %>% group_by(Code, year) %>% summarize(kgTOT = sum(Kg_TOT, na.rm=T)) %>% filter(Kg_TOT == 0)
d3 %>% group_by(Code, year) %>% summarize(kgTOT = sum(Kg_TOT, na.rm=T)) %>% filter(KgTOT == 0)
d3 %>% group_by(Code, year) %>% summarize(KgTOT = sum(Kg_TOT, na.rm=T)) %>% filter(KgTOT == 0)
d3 %>% filter(Code=='ESP000000786')
d3 %>% group_by(Code, year) %>% summarize(KgTOT = sum(Kg_TOT, na.rm=T)) %>% filter(KgTOT == 0)
ports %>% group_by(portName, BasePortCode) %>% summarize()
ports %>% group_by(portName, BasePortCode) %>% summarize(n=n())
#6. DATA BY FLEET
dF = d %>% group_by(range2, year) %>% summarize(Kg_TOT=sum(Kg_TOT), E_TOT=sum(E_TOT),
Kg_ARA=sum(Kg_ARA), E_ARA=sum(E_ARA),
Kg_HKE=sum(Kg_HKE), E_HKE=sum(E_HKE))
#6. DATA BY FLEET
dF = d %>% group_by(range2, extract) %>% summarize(Kg_TOT=sum(Kg_TOT), E_TOT=sum(E_TOT),
Kg_ARA=sum(Kg_ARA), E_ARA=sum(E_ARA),
Kg_HKE=sum(Kg_HKE), E_HKE=sum(E_HKE))
ggplot(dFull %>% filter(portArea=='Sud'), aes(x=Code, y=E_TOTpM)) +
geom_bar(color = 'Black', fill='Blue', alpha=0.5, width=.75, position="dodge", stat="identity")+
facet_grid(rows=vars(range2))+
themePlots
port
ports
##2. check general (all fleet) ARA landings distribution
d2 = d %>% group_by(extract, range) %>% summarize(Kg_TOT = sum(Kg_TOT, na.rm=T),
E_TOT = sum(E_TOT, na.rm=T),
Kg_ARA=sum(Kg_ARA, na.rm=T),
E_ARA = sum(E_ARA, na.rm=T)) %>% arrange(extract, range)
d2$range = factor(d2$range, levels = c("0-50", "50-100", "100-200", "200-300", "300-400", "400-500", "500-600", "600-700", "700-800", "800-900", "900-1000"))
d2[is.na(d2)] = 0
ggplot(d2, aes(x=range, y=E_ARA, color=extract, group=extract))+
geom_line()
ggplot(dFM, aes(x=2, y=E_ARAM, fill=range2))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y" , start=0)+
theme_void()
?hist
7620*1852
7620*1.852
7620/1.852
7620/1852
read.csv('/Users/jsala/ownCloud/GIS/Calculs_historics_vms/OTB/otb_year_vcpe_vmsint/otb_vmsint_vcpe_2021.csv')
d = read.csv('/Users/jsala/ownCloud/GIS/Calculs_historics_vms/OTB/otb_year_vcpe_vmsint/otb_vmsint_vcpe_2021.csv')
rm(list=ls())
d = read.csv('/Users/jsala/ownCloud/GIS/Calculs_historics_vms/OTB/otb_year_vcpe_vmsint/otb_vmsint_vcpe_2021.csv')
d$LPUE_HKE = d$Kg_HKE/d$Ftime
hist(d$LPUE_HKE)
hist(d$Kg_HKE)
d$LPUE_DPS= d$Kg_DPS/d$Ftime
d$LPUE_EOI = d$Kg_EOI/d$Ftime
hist(d$LPUE_DPS)
hist(d$LPUE_NEP)
d$LPUE_NEP = d$Kg_NEP/d$Ftime
hist(d$LPUE_NEP)
d$LPUE_ARA = d$Kg_ARA/d$Ftime
write.csv(d, '/Users/jsala/ownCloud/GIS/LIFE-ECOREST/otherLayers/otb_vmsint_vcpe_2021_LPUE.csv')
7630/1852
write.csv(d, '/Users/jsala/ownCloud/GIS/LIFE-ECOREST/otherLayers/otb_vmsint_vcpe_2021_LPUE.csv', dec=',', sep=';')
?write.csv
write.csv(d, '/Users/jsala/ownCloud/GIS/LIFE-ECOREST/otherLayers/otb_vmsint_vcpe_2021_LPUE.csv', dec=',', sep=';')
write.table(d, '/Users/jsala/ownCloud/GIS/LIFE-ECOREST/otherLayers/otb_vmsint_vcpe_2021_LPUE.csv', dec=',', sep=';')
?write.csv
write.table(d, '/Users/jsala/ownCloud/GIS/LIFE-ECOREST/otherLayers/otb_vmsint_vcpe_2021_LPUE.csv', dec='.', sep=';', quote=FALSE)
write.table(d, '/Users/jsala/ownCloud/GIS/LIFE-ECOREST/otherLayers/otb_vmsint_vcpe_2021_LPUE.csv', dec='.', sep=',', quote=FALSE)
write.table(d, '/Users/jsala/ownCloud/GIS/LIFE-ECOREST/otherLayers/otb_vmsint_vcpe_2021_LPUE.csv', dec='.', sep=',', quote=FALSE, row.names = FALSE)
write.table(d, '/Users/jsala/ownCloud/GIS/LIFE-ECOREST/otherLayers/otb_vmsint_vcpe_2021_LPUE.csv', dec='.', sep=';', quote=FALSE, row.names = FALSE)
d
summary(d)
d[is.na(d)] = 0
summary(d)
write.table(d, '/Users/jsala/ownCloud/GIS/LIFE-ECOREST/otherLayers/otb_vmsint_vcpe_2021_LPUE.csv', dec='.', sep=';', quote=FALSE, row.names = FALSE)
0.70*1852
library(ggplot2)
library(RPostgres)
library(tidyr)
library(dplyr)
library(zoo)
rm(list=ls())
drv <- dbDriver("PostgreSQL")
db = 'SAP_Test'
host_db = 'saptest.cmima.csic.es'
db_port = '5432'
db_user = 'joan'
pwd = 'Jo4nSAPO'
con <- dbConnect(RPostgres::Postgres(), dbname = db, host=host_db, port=db_port, user=db_user, password=pwd)
########Kg and Eu by species
query3 = 'SELECT "Date", "GearMainCode", "Census",  "Region", "Sp", "SpName", sum("Kg") as kg, sum("Eu") as eu from landings."nvMedesp" t1
JOIN vessel ON vessel."Id" = t1."VesselId"
group by "Date", "GearMainCode", "Census", "Region", "Sp", "SpName" order by "GearMainCode", "Date"'
s = dbGetQuery(con, query3)
#by species, GearMainCode and region
ggplot(s %>% filter(Sp == 'VMA', Date > '2020-01-01') %>%
mutate(yearMonth = as.yearmon(Date)) %>%
group_by(yearMonth, GearMainCode, Region) %>% summarize(Kg=sum(kg), Eu=sum(eu)))+
geom_line(aes(x=yearMonth, y=Kg, color=GearMainCode))+
facet_grid(rows=vars(Region))+
theme(legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5, size=10))
rm(list=ls())
db = 'SAP_Test'
host_db = 'saptest.cmima.csic.es'
db_port = '5432'
db_user = 'joan'
pwd='Jo4nSAPO'
conTest <- dbConnect(RPostgres::Postgres(), dbname = db, host=host_db, port=db_port, user=db_user, password = pwd)
library(dplyr)
library(tidyr)
library(scales)
library(ggplot2)
library(RPostgreSQL)
library(ggpubr)
rm(list=ls())
db = 'SAP_Test'
host_db = 'saptest.cmima.csic.es'
db_port = '5432'
db_user = 'joan'
pwd='Jo4nSAPO'
conTest <- dbConnect(RPostgres::Postgres(), dbname = db, host=host_db, port=db_port, user=db_user, password = pwd)
data = dbGetQuery(conTest,
SELECT "GearMainCode" AS "gear_code", "Region" AS "ccaa", "PortName" AS "port",
"TrackCode" AS "track_code", "VesselCode" AS "vessel_code", "Date" AS "date",
"GT" AS "total_gt", "TRB" AS "total_trb", "PowerMain_kW" AS "total_powermain", "PowerAux_kW" AS "total_poweraux"
FROM landings."nvMedesp"
JOIN vessel ON landings."nvMedesp"."VesselId" = vessel."Id"
WHERE "GearMainCode" = 'OTB'
LIMIT 200
)
library(dplyr)
library(tidyr)
library(scales)
library(ggplot2)
library(RPostgreSQL)
library(ggpubr)
rm(list=ls())
db = 'SAP_Test'
host_db = 'saptest.cmima.csic.es'
db_port = '5432'
db_user = 'joan'
pwd='Jo4nSAPO'
conTest <- dbConnect(RPostgres::Postgres(), dbname = db, host=host_db, port=db_port, user=db_user, password = pwd)
db = 'SAP_Test'
host_db = 'saptest.cmima.csic.es'
db_port = '5432'
db_user = 'joan'
pwd='Jo4nSAPO'
conTest <- dbConnect(RPostgres::Postgres(), dbname = db, host=host_db, port=db_port, user=db_user, password = pwd)
query = 'select * from vms."vmsint" where "Code" = \'ESP000025959\' and "Date" between \'2007-01-01\' and \'2007-03-01\''
s = dbGetQuery(conTest, query)
s
query = 'select * from vms."vmsint" where "Code" = \'ESP000025959\' and "Date" between \'2007-01-01\' and \'2007-03-01\' and "P_INT" = 0'
s = dbGetQuery(conTest, query)
s %>% filter(Code, Date, Latitude, Longitude, Speed, Course)
s %>% select(Code, Date, Latitude, Longitude, Speed, Course)
s = s %>% select(Code, Date, Latitude, Longitude, Speed, Course)
s
s$TrackCode = paste0(Code,'_', as.Date(s$Date))
s$TrackCode = paste0(s$Code,'_', as.Date(s$Date))
s
?read.table
s %>% group_by(TrackCode)
s = s %>% filter(Speed > 2 & Speed < 4)
s %>% group_by(TrackCode) %>% summarize(maxDate = max(s$Date))
s %>% group_by(TrackCode) %>% summarize(maxDate = max(s$Date), minDate = min(s$Date))
s %>% group_by(TrackCode) %>% summarize(maxDate = max(s$Date), minDate = min(s$Date))
as.Date('6:06',format='%h:%m')
as.Date('6:06',format='h:mm')
strptime('6:06', format="%H:%M")
?strptime
s %>% group_by(TrackCode) %>% summarize(maxDate = max(s$Date), minDate = min(s$Date))
s %>% group_by(as.dactor(TrackCode)) %>% summarize(maxDate = max(s$Date), minDate = min(s$Date))
s %>% group_by(as.factor(TrackCode)) %>% summarize(maxDate = max(s$Date), minDate = min(s$Date))
strptime("20/2/06 11:16", "%d/%m/%y %H:%M)
s %>% group_by(TrackCode) %>% summarize(maxDate = max(s$Date), minDate = min(s$Date))
strptime("20/2/06 11:16", "%d/%m/%y %H:%M'))
s %>% group_by(TrackCode) %>% summarize(maxDate = max(s$Date), minDate = min(s$Date))
strptime("20/2/06 11:16", "%d/%m/%y %H:%M")
s %>% group_by(TrackCode) %>% summarize(maxDate = max(s$Date), minDate = min(s$Date))
#
s %>% group_by(TrackCode) %>% summarize(maxDate = max(s$Date), minDate = min(s$Date))
#
Ftime = s %>% group_by(TrackCode) %>% summarize(maxDate = max(s$Date), minDate = min(s$Date))
Ftime$FishingTime = Ftime$maxDate - Ftime$minDate
Ftime
#calcular tiempo de pesca:
Ftime = s %>% group_by(TrackCode) %>% summarize(maxDate = max(s$Date), minDate = min(s$Date), Npoint = n())
Ftime
s %>% filter(TrackCode == 'ESP000025959_2007-01-02')
s %>% filter(TrackCode == 'ESP000025959_2007-01-08')
?merge
Ftime$FishingTime = Ftime$maxDate - Ftime$minDate
Ftime$Fpoint = Ftime$FishingTime / Ftime$Npoint
Ftime
Ftime
#juntar las dos tablas:
merge(s , Ftime, by='TrackCode')
#juntar las dos tablas:
finaldf = merge(s , Ftime, by='TrackCode')
library(dplyr)
library(tidyr)
library(scales)
library(ggplot2)
library(RPostgreSQL)
library(ggpubr)
rm(list=ls())
path = 'C:/Users/jsala/ownCloud/Reunions/20240528_ElisaArroyo/'
read.table(paste0(path, 'prueba.txt'))
read.table(paste0(path, 'prueba.txt'), header=TRUE, sep='\t')
d = read.table(paste0(path, 'prueba.txt'), header=TRUE, sep='\t')
d$Date = paste(d$Fecha, d$Hora)
strptime(d$Date, format='%d/%m/%y %H:%M')
d$Date = strptime(d$Date, format='%d/%m/%y %H:%M')
d$TrackCode = paste0(d$CFR, '_', as.Date(d$Date))
d = d %>% filter(Speed > 2 & Speed < 4)
d = d %>% filter(Velocidad > 2 & Velocidad < 4)
#calcular tiempo de pesca:
d %>% group_by(TrackCode) %>% summarize(maxDate = max(s$Date), minDate = min(s$Date), Npoint = n())
#calcular tiempo de pesca:
d %>% group_by(TrackCode) %>% summarize(maxDate = max(Date), minDate = min(Date), Npoint = n())
#calcular tiempo de pesca:
Ftime = d %>% group_by(TrackCode) %>% summarize(maxDate = max(Date), minDate = min(Date), Npoint = n())
Ftime$FishingTime = Ftime$maxDate - Ftime$minDate
Ftime
Ftime$FishingTime = as.numeric(Ftime$FishingTime)
Ftime
Ftime$FishingTime = as.numeric(Ftime$FishingTime)/3600
Ftime
#calcular tiempo de pesca:
Ftime = d %>% group_by(TrackCode) %>% summarize(maxDate = max(Date), minDate = min(Date), Npoint = n())
Ftime$FishingTime = Ftime$maxDate - Ftime$minDate
Ftime$FishingTime = as.numeric(Ftime$FishingTime)/3600
Ftime
Ftime$Fpoint = Ftime$FishingTime / Ftime$Npoint
Ftime
#juntar las dos tablas:
finaldf = merge(s , Ftime, by='TrackCode')
#juntar las dos tablas:
finaldf = merge(d , Ftime, by='TrackCode')
finaldf
rm(list=ls())
library(ggplot2)
library(multimode)
library(RPostgreSQL)
library(tidyr)
library(dplyr)
rm(list=ls())
db = 'SAP_Test'
host_db = 'saptest.cmima.csic.es'
db_port = '5432'
db_user = 'joan'
pwd='Jo4nSAPO'
conTest <- dbConnect(RPostgres::Postgres(), dbname = db, host=host_db, port=db_port, user=db_user, password = pwd)
query = 'select * from vms."vmsint"
JOIN vessel ON vessel."Id" = vms.vmsint."VesselId"
where "GearMainCode" = \'PS\' and "Date" between \'2023-01-01\' and \'2023-12-31\''
d = dbGetQuery(conTest, query)
#3. Speed histogram analysis
#speed histograms
ggplot(d)+
geom_histogram(aes(x=Speed, fill=PredictedOp), binwidth = 0.2)
ggplot(d)+
geom_histogram(aes(x=Speed), binwidth = 0.2)
ggplot(d %>% filter(Speed<0.1))+
geom_histogram(aes(x=Speed), binwidth = 0.2)
ggplot(d %>% filter(Speed>0.1))+
geom_histogram(aes(x=Speed), binwidth = 0.2)
speeddf = d %>% filter(Speed < 12 & Speed > 0.1) %>% select(Speed)
speed = speeddf$Speed
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd0(speed)), display=TRUE, xlab='Speed (kn)')
?nmodes
?bw.nrd0
library(dplyr)
rm(list=ls())
d = read.csv(paste0('results/speedFilter/fishingEffortCheck/vmsOp2_pred.csv'))
#3. Speed histogram analysis
#speed histograms
ggplot(d)+
geom_histogram(aes(x=Speed, fill=PredictedOp), binwidth = 0.2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
d = read.csv(paste0('results/speedFilter/fishingEffortCheck/vmsOp2_pred.csv'))
d = read.csv(paste0('././results/speedFilter/fishingEffortCheck/vmsOp2_pred.csv'))
d = read.csv(paste0('../../results/speedFilter/fishingEffortCheck/vmsOp2_pred.csv'))
#3. Speed histogram analysis
#speed histograms
ggplot(d)+
geom_histogram(aes(x=Speed, fill=PredictedOp), binwidth = 0.2)
ggplot(d )+
geom_histogram(aes(x=Speed, fill=ObservedOp), binwidth = 0.2)
ggplot(d %>% filter(Speed>0.1))+
geom_histogram(aes(x=Speed), binwidth = 0.2)
speeddf = d %>% filter(Speed < 12 & Speed > 0.1) %>% select(Speed)
speed = speeddf$Speed
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd0(speed)), display=TRUE, xlab='Speed (kn)')
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd(speed)), display=TRUE, xlab='Speed (kn)')
loc = locmodes(speed, mod0=nmodes(speed, bw=bw.nrd0(speed)), display=TRUE, xlab='Speed (kn)')
nmodes(speed, bw=bw.nrd0(speed))
?locmodes
loc$locations
